buildscript {
    ext {
        springBootVersion = '2.1.8.RELEASE'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
    }
}

allprojects {
    group = 'com.club.masterpiece'
    version = '0.1.0' + '-' + new Date().format("yyyyMMdd-HHmmss")
}

subprojects {

    apply plugin: 'java'

    sourceCompatibility = 1.8

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    dependencies {

        compileOnly 'org.projectlombok:lombok'

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    configurations {
        developmentOnly

        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
}

project(':movie-masterpiece-club-common') {
    dependencies {
    }
}

project(':movie-masterpiece-club-web') {
    dependencies {
        compile project(':movie-masterpiece-club-common')
    }

//    /** 그래들 빌드시, npm run build:prod 수행 **/
//    task buildWebFrontEnd(type: Exec) {
//        workingDir("./movie-masterpiece-club-web/frontend")
//
//        if(System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//            commandLine('npm', 'run', 'build:prod')
//        }
//    }
//
//    build.dependsOn 'buildWebFrontEnd'
}

project(':movie-masterpiece-club-admin') {
    dependencies {
        compile project(':movie-masterpiece-club-common')
    }
}